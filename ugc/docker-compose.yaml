version: '2'
services:
  api:
    build:
      context: .
      dockerfile: ./compose/api/production/Dockerfile
    ports:
      - "8000:8000"
    environment:
      MONGO_DSN: mongodb://root:pass123@mongo:27017/
    restart: always
    depends_on:
      - kafka
      - mongo
      - clickhouse-node1
      - etl
    command: /start

  etl:
    build:
      context: .
      dockerfile: compose/etl/production/Dockerfile
    container_name: kafka2clickhouse
    depends_on:
      - kafka
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4
    command: /start
    restart: always


  nginx:
    image: nginx:1.19.2
    volumes:
      - ./deploy/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - /tmp/log/nginx/:/var/log/nginx/
    depends_on:
      - api
    ports:
      - "80:80"
    restart: unless-stopped
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://localhost:5044'
        tag: nginx


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
#    image: kolsys/clickhouse-server:21.3.15.4-lts-arm  # for Apple silicone
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
#    image: kolsys/clickhouse-server:21.3.15.4-lts-arm  # for Apple silicone
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
#    image: kolsys/clickhouse-server:21.3.15.4-lts-arm  # for Apple silicone
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
#    image: kolsys/clickhouse-server:21.3.15.4-lts-arm  # for Apple silicone
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper


  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass123

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:pass123@mongo:27017/
    depends_on:
      - mongo


  logstash:
#    image: docker.elastic.co/logstash/logstash:7.15.2-arm64  # for Apple silicone
    image: docker.elastic.co/logstash/logstash:7.15.2
    depends_on:
      - elasticsearch
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ES_HOST: "elasticsearch:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      - ./deploy/logstash.conf:/config/logstash.conf:ro
      - /tmp/logs/nginx/:/var/log/nginx/:ro
    command: logstash -f /config/logstash.conf
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.3.2
    volumes:
      - /tmp/logs/nginx:/var/log/nginx:ro
      - ./deploy/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - api
      - nginx
      - logstash
      - elasticsearch
      - kibana
    links:
      - logstash